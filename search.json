[{"title":"HTML基础（一）：meta标签","url":"/2022/02/26/HTML%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Ameta%E6%A0%87%E7%AD%BE/","content":"格式&lt;head&gt;    &lt;meta&gt;&lt;/head&gt;\n\n作用设置网页中的元数据，用于浏览器渲染网页，元数据对用户是不可见的。\nxxxxxxxxxx html\ncharset：指定网页的字符集编码\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n\nname：指定的数据的名称\n\nkeywords：网页的关键字，搜索引擎的搜索关键词\n&lt;meta name=&quot;keywords&quot; content=&quot;网上购物,网上商城,家电,手机,电脑,服装,居家,母婴,美妆,个护,食品,生鲜,京东&quot;&gt;\n\ndescription：网页的描述，搜索结果简介\n&lt;meta name=&quot;description&quot; content=&quot;京东JD.COM-专业的综合网上购物商城，为您提供正品低价的购物选择、优质便捷的服务体验。商品来自全球数十万品牌商家，囊括家电、手机、电脑、服装、居家、母婴、美妆、个护、食品、生鲜等丰富品类，满足各种购物需求。&quot;/&gt;\n\n\n\n\n\ncontent：指定的数据的内容\n\nhttp-equiv：将页面重定向到另一个网站\n&lt;!--三秒后跳转到百度--&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;3;url=https://www.baidu.com&quot;&gt;\n\n","categories":["前端"],"tags":["HTML"]},{"title":"HTML基础（二）：相对路径","url":"/2022/02/26/HTML%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/","content":"含义​    .&#x2F; 表示当前文件所在的目录，可省略不写\n&lt;!--两者都指的是当前目录下的target文件--&gt;&lt;a href=&quot;./target.html&quot;&gt;&lt;/a&gt;&lt;a href=&quot;target.html&quot;&gt;&lt;/a&gt;\n\n​    ..&#x2F; 表示当前文件所在的目录的上一级目录，可多次使用\n&lt;!--指的是当前目录的上一级目录下的target文件--&gt;&lt;a href=&quot;../target.html&quot;&gt;&lt;/a&gt;&lt;!--指的是当前目录的上两级目录下的target文件--&gt;&lt;a href=&quot;../../target.html&quot;&gt;&lt;/a&gt;\n","categories":["前端"],"tags":["HTML"]},{"title":"CSS基础（三）：选择器的权重","url":"/2022/02/27/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E6%9D%83%E9%87%8D/","content":"\n样式的冲突：通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值。\n发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定\n\n选择器的权重排序\n内联样式\n优先级：1,0,0,0（最高）\n\n示例：\n&lt;div id=&quot;box1&quot; class=&quot;red&quot; style=&quot;background-color:skyblue&quot;&gt;    我是一个div&lt;/div&gt;\n\n\nid选择器\n优先级：0,1,0,0\n\n示例：\n#box1&#123;    background-color:orange;&#125;\n\n\n类和伪类选择器\n优先级：0,0,1,0\n\n示例：\n.red&#123;    background-color:red;&#125;\n\n\n元素选择器\n优先级：0,0,0,1\n\n示例：\ndiv&#123;    background-color:yellow;&#125;\n\n\n通配选择器\n优先级：0,0,0,0\n\n示例：\ndiv&#123;    font-size:20px;&#125;*&#123;    font-size:50px;&#125;/*则字体显示为20px大小*/\n\n\n继承的样式\n优先级：没有优先级\n\n示例：\n&lt;div&gt;    我是一个div    &lt;span&gt;我是div中的span&lt;/span&gt;&lt;/div&gt;\n\ndiv&#123;    font-size:20px;&#125;*&#123;    font-size:50px;&#125;/*则“我是一个div”字体显示为20px大小，“我是div中的span”字体显示为50px*/\n\n\n\n\n比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（分组选择器是单独计算的，不会相加）\n\n\n示例：\n/*优先级为0，0，0，1*/div&#123;    background-color:yellow;&#125;/*优先级为0，1，0，1*/div#box&#123;    background-color:orange;&#125;/*单独计算优先级，在选择器内不参与累加*/div,p,span&#123;    background-color:orange;&#125;\n\n\n选择器的累加不会超过器最大的数量级，比如：类选择器再高也不会超过id选择器\n\n\n示例：\n/*优先级为0，1，0，0*/#box&#123;    background-color:yellow;&#125;/*优先级不超过0，1，0，0*/.d1.d2.d3.d4.d5.d6.d7.d8.d9.d10.d11&#123;    background-color:yellow;&#125;\n\n\nTips：选择器写得越具体、越长，优先级越高。\n\n\n若优先级计算后相同，则优先使用靠下的样式\n\n\n示例：\n&lt;div class=&quot;d1 d2&quot;&gt;    &lt;/div&gt;\n\n.d1&#123;    background-color:yellow;&#125;.d2&#123;    background-color:red;&#125;/*则背景显示为红色*/\n\n\n可以在某一个样式后边添加 ！important，则此时该样式会获取到最高的优先级，甚至超过内联样式\n\n\n示例：\n&lt;div id=&quot;box1&quot; class=&quot;d1&quot; style=&quot;background-color:skyblue&quot;&gt;    我是一个div&lt;/div&gt;\n\n.d1&#123;    background-color:yellow !important;&#125;/*则背景显示为黄色*/\n\n\n注意：在开发中要慎用 ！important。\n\n","categories":["前端"],"tags":["CSS"]},{"title":"CSS基础（二）：继承","url":"/2022/02/27/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%BB%A7%E6%89%BF/","content":"定义为一个元素设置的样式同时也会应用到它的后代元素上，发生在祖先和后代之间\n作用继承的设计是为了方便开发，利用继承可以将一些通用的样式统一设置到共同的祖先元素上，这样就只需设置一次即可让所有的元素都具有该样式\n注意并不是所有的样式都会被继承，比如：背景相关、布局相关的这些样式有不会被继承。可通过查阅文档（inherited）看是否被能够被继承\n示例&lt;p&gt;    我是一个p元素    &lt;span&gt;我是p元素中的span&lt;/span&gt;&lt;/p&gt;\n\np&#123;    /*则p和span中文字都变红*/    color:red;    /*则p背景变橙色，span背景为默认值透明，但看起来也是橙色*/    background-color:orange;&#125;\n\n","categories":["前端"],"tags":["CSS"]},{"title":"CSS基础（一）：选择器的分类及作用","url":"/2022/02/26/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8/","content":"常用选择器\n元素选择器\n作用：根据标签名来选中指定元素\n\n语法：标签名{}\n\n示例：\np&#123;\tcolor: red;&#125;h1&#123;    color: green;&#125;div&#123;    color: blue;&#125;\n\n\nid选择器\n作用：根据元素的id属性值选中一个元素（不能重复）\n\n语法：#id属性值{}\n\n示例：\n&lt;p id=&quot;red&quot;&gt;test&lt;/p&gt;\n\n#red&#123;\tcolor: red;&#125;#box&#123;\tcolor: red;&#125;\n\n\n类选择器\n作用：根据元素的class属性值选中一组元素（可重复）\n\n语法：.class属性值{}\n\n示例：\n&lt;p class=&quot;blue&quot;&gt;test1&lt;/p&gt;&lt;p class=&quot;blue red&quot;&gt;test2&lt;/p&gt;\n\n.blue&#123;\tcolor: blue;&#125;.red&#123;\tcolor: red;&#125;\n\n\n通配选择器\n作用：选中页面中的所有元素\n\n语法：*\n\n示例：\n*&#123;\tcolor: blue;&#125;\n\n\n\n复合选择器\n交集选择器\n作用：选中同时符合多个条件的元素\n\n语法：选择器1选择器2……选择器n{}\n\n示例：\ndiv.red&#123;    font-size:30px;&#125;.a.b.c&#123;    font-size:30px;&#125;/*语法上没问题，但没必要这么写，因为box1已经可以指定唯一元素*/div#box1&#123;    &#125;\n\n注意：交集选择器中如果有元素选择器，必须使用元素选择器开头\n\n\n\n并集选择器（分组选择器）\n作用：同时选择多个选择器对应的元素\n\n语法：选择器1，选择器2，……，选择器n{}\n\n示例：\nh1, span&#123;    &#125;/*交集并集组合，最后div.red表示class值为red的div*/#b1,.p1,h1,span,div.red&#123;    &#125;\n\n\n\n关系选择器\n元素关系\n\n父元素：直接包含子元素的元素\n子元素：直接呗父元素包含的元素\n祖先元素：直接或间接包含后代元素的元素（一个元素的父元素也是它的祖先元素）\n后代元素：直接或间接被祖先元素包含的元素（子元素也是后代元素）\n兄弟元素：拥有相同父元素的元素\n\n\n示例：\n&lt;div&gt;    我是一个div    &lt;p&gt;        我是div中的p元素        &lt;span&gt;我是p元素中的span元素&lt;/span&gt;    &lt;/p&gt;    &lt;span&gt;我是div中的span元素&lt;/span&gt;&lt;/div&gt;\n\n\n子元素选择器\n作用：选中指定父元素中的指定子元素\n\n语法：父元素 &gt; 子元素{}\n\n示例：\ndiv &gt; span&#123;    color: blue;&#125;div &gt; p &gt; span&#123;    &#125;\n\n\n后代元素选择器\n作用：选中指定元素中的指定后代元素\n\n语法：祖先  后代{}\n\n示例：\ndiv span &#123;    color: blue;&#125;\n\n\n兄弟元素选择器\n选中下一个兄弟元素\n\n语法：前一个 +  后一个{}\n\n示例：\np + span &#123;    color: blue;&#125;\n\n\n选中下边所有的兄弟\n\n语法：兄 ~  弟{}\n\n示例：\np ~ span &#123;    color: blue;&#125;\n\n\n\n\n\n属性选择器示例：\n&lt;p title=&quot;abc&quot;&gt;&lt;/p&gt;&lt;p title=&quot;abcdef&quot;&gt;&lt;/p&gt;&lt;p title=&quot;helloabc&quot;&gt;&lt;/p&gt;&lt;p title=&quot;heabcllo&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n\n\n选中含有指定属性的元素\n语法：[属性名]{}\n\n示例：\np[title]&#123;    color: blue;&#125;\n\n\n选中含有指定属性和属性值的元素\n语法：[属性名&#x3D;属性值]{}\n\n示例：\np[title=“abc”]&#123;    color: blue;&#125;\n\n\n选中属性值以指定值开头的元素\n语法：[属性名^&#x3D;abc]{}\n\n示例：\np[title^=“abc”]&#123;    color: blue;&#125;\n\n\n选中属性值以指定值结尾的元素\n语法：[属性名$&#x3D;abc]{}\n\n示例：\np[title$=“abc”]&#123;    color: blue;&#125;\n\n\n选中属性值含有某值的元素\n语法：[属性名*&#x3D;abc]{}\n\n示例：\np[title*=‘abc’]&#123;    color: blue;&#125;\n\n\n\n伪类选择器\n伪类（不存在的类，特殊的类）\n\n伪类用来描述一个元素的特殊状态\n比如：第一个子元素、被点击的元素、鼠标移入的元素……\n\n\n伪类一般情况下都是使用：开头\n\n\n示例：\n&lt;ul&gt;    &lt;li&gt;第一个&lt;/li&gt;    &lt;li&gt;第二个&lt;/li&gt;    &lt;li&gt;第三个&lt;/li&gt;    &lt;li&gt;第四个&lt;/li&gt;    &lt;li&gt;第五个&lt;/li&gt;&lt;/ul&gt;\n\n\n:first-child\n作用：选中第一个子元素\n\n示例：\nul&gt;li:first-child&#123;    color: blue;&#125;\n\n\n:last-child\n作用：选中最后一个子元素\n\n示例：\nul&gt;li:last-child&#123;    color: blue;&#125;\n\n\n:nth-child()\n作用：选中第n个子元素\n\n特殊值：\n\nn：全选中\n2n或even：选中偶数位的元素\n2n+1或odd：选中奇数位的元素\n\n\n示例：\nul&gt;li:nth-child(3)&#123;    color: blue;&#125;ul&gt;li:nth-child(n)&#123;    color: blue;&#125;\n\n\n\n\n以上这些伪类都是根据所有的子元素进行排序\n\n示例：\n&lt;ul&gt;    &lt;span&gt;第〇个&lt;/span&gt;    &lt;li&gt;第一个&lt;/li&gt;    &lt;li&gt;第二个&lt;/li&gt;    &lt;li&gt;第三个&lt;/li&gt;    &lt;li&gt;第四个&lt;/li&gt;    &lt;li&gt;第五个&lt;/li&gt;&lt;/ul&gt;\n\n\n:first-of-type\n示例：\nul&gt;li:first-of-type&#123;    color: blue;&#125;\n\n\n:last-of-type\n:nth-of-type\n\n\n以上这些伪类和上述的类似，不同点是它们是在同类型元素中进行排序\n\n\n:not() 否定伪类\n作用：将符合条件的元素从选择器中去除\n\n示例：\nul&gt;li:not(:nth-child(3))&#123;    color: blue;&#125;\n\n\n超链接的伪类（a元素的伪类）\n作用：将符合条件的元素从选择器中去除\n\n语法：\n\na:link{}\n用来表示没访问过的链接（正常的链接）\n\na:visited{}\n用来表示访问过的链接（点击过）\n由于隐私原因，visited这个伪类只能修改链接的颜色\n\n\n\n示例：\na:link&#123;    color:red;    font-size:20px;&#125;a:visited&#123;    color:orange;    /*font-size在visited中不起作用*/    font-size:20px;&#125;\n\n\n:hover 鼠标移入伪类\n作用：用来表示鼠标移入的状态\n\n示例：\na:hover&#123;    color:aqua;    font-size:50px;&#125;\n\n\n:active 鼠标点击伪类\n作用：用来表示鼠标点击\n\n示例：\na:active&#123;    color:aqua;    font-size:50px;&#125;\n\n\n\n\n注：有先后顺序之分，link、vidited、focus、hover、active（其中link和visited顺序可交换\n\n伪元素选择器\n伪元素（不存在的元素，特殊的位置）\n\n伪类一般情况下都是使用 :: 开头\n\n\n示例：\n&lt;ul&gt;    &lt;li&gt;第一个&lt;/li&gt;    &lt;li&gt;第二个&lt;/li&gt;    &lt;li&gt;第三个&lt;/li&gt;    &lt;li&gt;第四个&lt;/li&gt;    &lt;li&gt;第五个&lt;/li&gt;&lt;/ul&gt;\n\n\n::first-letter{}\n作用：表示第一个字母\n\n示例：\np::first-letter&#123;    font-size:50px;&#125;\n\n\n::first-line{}\n作用：表示第一行\n\n示例：\np::first-letter&#123;    background-color:yellow;&#125;\n\n\n::selection{}\n作用：表示选中的内容\n\n示例：\np::selection&#123;    background-color:greenyellow;&#125;\n\n\n::before{}\n作用：表示元素的开始，必须结合content属性一起用\n\n示例：\ndiv::before&#123;    /*在div中最开头出现红色abc字样，因为它是通过css加的，所以它无法被选中*/    content:&#x27;abc&#x27;;    color:red;&#125;\n\n\n::after{}\n作用：表示元素的最后，必须结合content属性一起用\n\n示例：\ndiv::before&#123;    /*在div中最开头出现红色abc字样，因为它是通过css加的，所以它无法被选中*/    content:&#x27;abc&#x27;;    color:red;&#125;\n\n\n\n","categories":["前端"],"tags":["CSS"]},{"title":"CSS基础（四）：单位","url":"/2022/03/01/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%8D%95%E4%BD%8D/","content":"长度单位\n像素 （px）\n不同屏幕的像素大小不同，像素越小的屏幕显示效果越清晰\n同样的200px在不同的设备下显示效果不一样\n\n\n百分比 （%）\n将其属性值设置为相对于其父元素属性的百分比\n设置百分比可以使子元素跟随父元素的改变而改变\n\n\nem\nem是相对于元素（自身）的字体大小来计算\n\n1em &#x3D; 1 font-size\n1 font-size &#x3D; 16px（默认）\n\nem会根据字体大小的改变而改变\n\n示例：\n/*盒子大小为160px*/.box1&#123;    font-size:16px;    width:10em;    height:10em;   \tbackground-color:greenyellow;&#125;/*盒子大小为200px*/.box2&#123;    font-size:20px;    width:10em;    height:10em;   \tbackground-color:greenyellow;&#125;\n\n\nrem\nrem是相对于根元素（html）的字体大小来计算\n\n在移动端用得挺多\n\n示例：\n/*盒子大小为160px*/html&#123;    font-size:30px;&#125;/*盒子大小为300px*/.box1&#123;    width:10rem;    height:10rem;   \tbackground-color:greenyellow;&#125;\n\n\n\n颜色单位\n颜色名\n比如：red、orange、yellow、blue、green……\n\n\nRGB\n语法：rgb(红，绿，蓝) \n\n取值范围：0~255\n\n特殊值：rgb（0，0，0）黑色\n​                rgb（255，255，255）白色\n\n\n\nRGBA\n语法：rgb(红，绿，蓝，透明度)\n\n特殊值：rgb（176,199,167，1）完全不透明\n​                rgb（176,199,167，0）完全透明\n​                rgb（176,199,167，.5）半透明\n\n\n\n十六进制的RGB\n语法：#红绿蓝 \n\n取值范围：00~ff  \n\n特殊值：#ff0000 红色\n​                #00000 白色\n\n如果颜色两位两位重复可以简写：\n#aabbcc –&gt; #abc\n#aabbcd 不能简写\n\n\n\nHSL、HSLA\nH 色相：0~360\nS 饱和度：0%~100% （0%灰）\nL 亮度：0%~100%（0%黑，50%正，100%白）\nA 透明度\n\n\n\n","categories":["前端"],"tags":["CSS"]},{"title":"CSS基础（五）：布局相关知识","url":"/2022/03/01/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E5%B8%83%E5%B1%80%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","content":"文档流（normal flow）\n网页是一个多层结构，用户只能看到最顶层\n最底下的一层称为文档流，文档流是网页的基础\n创建的元素默认都在文档流中进行排列\n元素主要有两个状态：\n\n​    在文档流中\n\n​    不在文档流中（脱离文档流）\n\n\n\n元素在文档流中的特点\n块元素\n总是独占一行（无论多宽，自上向下垂直排列）\n默认宽度：父元素的全部（即把父元素撑满）\n默认高度：被子元素（子元素）撑开\n比如：div\n\n\n行内元素\n不会独占一行，只占自身大小（从左到右水平排列）\n若一行中不能容纳下所有行内元素，则换行（与书写习惯一致）\n默认宽度：被子元素（子元素）撑开\n默认高度：被子元素（子元素）撑开\n设置宽高不能生效\n\n\n\n\n一旦块元素和行内元素脱离文档流，则不具备以上特点\n\n盒子模型（box model）\n所有元素都是一个矩形的盒子\n每个盒子都由几个部分组成：\n\n内容区（content）：内容区大小由width和height决定\n内边距（padding）：会影响盒子大小\n边框（border）：会影响盒子大小\n外边距（margin）\n\n盒子的可见框的大小，默认情况下由内容区、内边距、边框共同决定\n盒子的实际大小，还受外边距影响\n\n边框（border）\n边框宽度：border-width\n可只指定四个方向的边框宽度（顺时针）\n\n如果省略，一般为3px\n\n四个值：上 右 下 左\n\n三个值：上 左右 下\n\n两个值： 上下 左右\n\n一个值：上下左右\n\n示例：\n/*上 右 下 左*/border-width:10px 20px 30px 40px;/*上 左右 下*/border-width:10px 20px 30px;/*上下 左右*/border-width:10px 20px;/*上下左右*/border-width:10px;\n\nborder-xxx-width：\nxxx可以是 top right bottom left\n\n\n\n边框颜色：border-color\n可只指定四个方向的边框颜色：规则同上\n如果省略，默认使用color的值（color默认为black）\n\n\n边框样式：border-style\n可只指定四个方向的边框样式：规则同上\nsolid 实线、dotted 点状虚线、dashed 虚线、double 双线\n不可省略，默认值为none\n\n\nborder简写属性（最常用）\nborder：width color style; (可改变顺序)\n\n示例：\n.box1&#123;    border:10px orange solid;&#125;\n\nborder-xxx 同理\nxxx可以是 top right bottom left\n\n\n\n边框圆角：border-radius\nborder-radius\n\n四个值：左上 右上 右下 左下\n三个值：左上 右上&#x2F;左下 右下\n两个值：左上&#x2F;右下 右上&#x2F;左下 \n一个值：四个角\n\n .box1&#123;    /*半径为10px*/    border-radius:10px;&#125;.box1&#123;    /*分别指定四个角的圆角*/    border-radius:10px 20px 30px 40px;&#125;/*椭圆角*/.box1&#123;    /*水平半径为10px 垂直半径为20px*/    border-radius:10px / 20px;&#125;/*将元素设置为圆形*/.box1&#123;    border-radius:50%;&#125;\n\nborder-top-left-radius\n /*椭圆*/.box1&#123;    /*水平半径为10px 垂直半径为20px*/    border-top-left-radius:10px 20px;&#125;\n\nborder-top-right-radius\n\nborder-bottom-left-radius\n\nborder-bottom-right-radius\n\n\n\n\n内边距（padding）\n内边距：内容区和边框之间的距离\n内边距的设置会影响到盒子的大小\n背景颜色会延伸到内边距上\n\n\npadding-top\npadding-right\npadding-bottom\npadding-left\n简写padding:\n规则同border-width\n\n\n\n外边距（margin）\n外边距不会影响盒子可见框大小\n但是会影响盒子的位置（即影响盒子实际大小）\n\n\nmargin-top\n上外边距，设置一个正值，元素（自身）会向下移动\n\n\nmargin-right\n默认情况下，不会产生任何效果；总是被自动调整\n\n\nmargin-bottom\n下外边距，设置一个正值，其下边的元素会向下移动\n\n\nmargin-left\n左外边距，设置一个正值，元素（自身）会向右移动\n\n\n\n\n负值则方向相反\n\n\n简写margin:\n规则同border-width\nmargin: 0px auto (水平居中)\n\n\n\n外边距重叠问题（垂直外边距的重叠）\n相邻的垂直方向的外边距会发生重叠现象\n\n兄弟元素间的垂直外边距\n两者都是正值：取两者之间的较大值\n特殊情况：\n一正一负：取两者之和\n都负：取绝对值较大值\n\n\n兄都元素之间的外边距重叠对开发有利，不需要处理\n\n父子元素间的垂直外边距\n父子元素间的相邻外边距，子元素会传递给父元素（上外边距）\n示例：\n&lt;div class=&quot;box1&quot;&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;/div&gt;\n\n.box1&#123;    width:200px;    height:200px;    background-color:#bfa;&#125;.box2&#123;    width:100px;    height:100px;    background-color:orange;    margin-top:100px&#125;\n\n效果：\n\n\n​    \n\n处理方式：\n\n开启父元素的BFC：见CSS提升（二）：高度塌陷问题\n\n消除”相邻”条件：利用display:table(before伪类)\n.box1&#123;    width:200px;    height:200px;    background-color:#bfa;&#125;/*利用**display:table**(before伪类)*/.box1::before&#123;    content:&#x27;&#x27;;    display:table&#125;.box2&#123;    width:100px;    height:100px;    background-color:orange;    margin-top:100px&#125;\n\n效果：\n\n\n\n\n\n盒子的大小盒子的可见框大小\n默认情况：由内容区、内边距、边框共同决定\nbox-sizing：用来设置盒子尺寸的计算方式，即设置width和height的作用\n可选值：\ncontent-box：默认值，宽度和高度用来设置内容区的大小\nborder-box：宽度和高度用来设置整个盒子的可见框大小（width和height指的是内容区和边框的总大小，不包括外边距）\n\n\n\n\n\n盒子的实际大小\n还受外边距影响\n\n盒子的水平布局 （等式）\n元素在其父元素中水平方向的位置由一下几个属性共同决定：\n\nmargin-left\nborder-left\npadding-left\nwidth\npadding-right\nborder-right\nmargin-right\n\n\n一个元素在其父元素中水平布局必须要满足以下式：\n\nmargin-left + border-left + padding-left + width + padding-right + border-right + margin-right &#x3D; 其父元素内容区的宽度\n\n若相加结果使等式不成立，称为过度约束，则等式会自动调整：\n\n如果这七个值中没有为auto的情况：\n则浏览器会自动调整margin-right值以使等式满足\n\n这七个值中有三个可以设置为auto：\n\nwidth\n\nmargin-left\n\nmargin-right\n(padding不可以自动调整)\n\n\n\n若某个值为auto，则自动调整设有auto的那个属性使等式成立\n（width的值默认是auto）\n若将width和一个外边距设置为auto，则width调整为最大，设置为auto的外边距会自动为0\n若将两个外边距设置为auto，width固定，则外边距设置为相同值（居中）\n若将三个值都设置为auto，则width调整为最大，外边距都为0\n\n\n\n盒子的垂直布局 （溢出问题）\n默认情况下父元素的高度被内容撑开\n\noverflow （用于解决溢出）\n溢出：子元素的大小超过了父元素，则子元素从父元素中溢出\n解决溢出：使用overflow属性设置父元素\n可选值：\nvisible（默认值）：溢出\nhidden：溢出的内容被裁剪不会显示\nscroll：生成两个（垂直+水平）滚动条，通过滚动条查看完整内容\nauto：根据需要生成滚动条\n\n\noverflow-x：单独处理水平\noverflow-y：单独处理垂直\n\n\n以上所有内容以块元素为例(div)\n\n行内元素的盒模型\n行内元素不支持设置宽度和高度，内容区大小由内容直接决定\n行内元素可以设置padding，但是垂直方向padding不会影响页面的布局\n行内元素可以设置border，但是垂直方向border不会影响页面的布局\n行内元素可以设置margin，但是垂直方向margin不会影响页面的布局\n\ndisplay（块元素和行内元素相互转换）\n设置元素显示的类型（块元素和行内元素相互转换）\n可选值：\ninline：设置为行内元素\nblock：设置为块元素\ninline-block：设置为行内块元素（开发时不常用）\n既可以设置宽度和高度，又不会独占一行\n\n\ntable：设置为一个表格\nnone：不显示（隐藏），不占据页面位置\n\n\n\nvisibility\n设置元素显示的状态\n可选值：\nvisible：默认值，元素正常显示\nhidden：不显示（隐形），但是依然占据页面的位置\n\n\n\n轮廓（outline）\n与border区分\n\n不同点：轮廓不会影响到可见框的大小，不影响页面布局\n\n\noutline多应用于鼠标悬停时：\n.box1:hover&#123;    outline:10px red solid;&#125;\n\n阴影（box-shadow)\n不影响页面布局\n\n语法：box-shadow：水平偏移量 垂直偏移量 模糊半径颜色\n\n水平偏移量：设置阴影水平位置，正值向右移动，负值相反\n垂直偏移量：设置阴影垂直位置，正值向下移动，负值相反\n模糊半径：越大越模糊\n颜色：rgba(0，0，0，.3)\n\n\n示例：\n.box1&#123;    box-shadow:10px 10px 50px rgba(0,0,0,.3)&#125;\n\n浏览器的默认样式\n浏览器会为元素设置默认样式，开发时需要去除默认样式（pc端）\n\n去除默认样式bady&#123;    magin:0;&#125;p&#123;    magin:0;&#125;ul&#123;    magin:0;    padding:0;    list-style:none;/*去除项目符号*/&#125;/*通常情况下简单写法*/*&#123;    margin:0;    padding:0;&#125;ul&#123;    list-style:none;/*去除项目符号*/&#125;\n\n最完美的写法，通过引入重置样式表\n\nreset.css：直接去除浏览器的默认样式\nnormalize.css：对默认样式进行了统一\n\n","categories":["前端"],"tags":["CSS","盒子模型"]},{"title":"CSS基础（六）：字体","url":"/2022/03/02/CSS%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E5%AD%97%E4%BD%93/","content":"字体相关样式\ncolor  字体颜色（严格：前景色，一般用来设置字体颜色）\n\nfont-size：字体大小\n\n1 em &#x3D; 当前元素的一个font-size\n1 rem &#x3D; 根元素的一个font-size\n\n\nfont-family：字体族（格式）\n\n可同时指定多个字体，字体间使用逗号隔开，字体生效时优先使用第一个，第一个无法使用则使用第二个，以此类推\n\n可选值：具体的字体名（eg.’微软雅黑’ ）或者 字体分类\n​    字体分类：浏览器自动使用该类别下的字体\n\nserif 衬线字体\nsans-serif 非衬线字体\nmonospace 等宽字体（每个字母宽度一样）\n\n\n若用户本地没有相关字体\n@font-face&#123;    /*指定字体的名字*/    font-family:&#x27;myfont&#x27;;    /*服务器中字体的路径*/    src:url(&#x27;./font/xxxx.ttf&#x27;)format(&#x27;truetye&#x27;);&#125;p&#123;    font-family:myfont;&#125;\n\n问题：加载速度、版权、字体格式\n\n\n\n\n","categories":["前端"],"tags":["CSS"]},{"title":"CSS提升（一）：浮动","url":"/2022/03/02/CSS%E6%8F%90%E5%8D%87%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%B5%AE%E5%8A%A8/","content":"浮动的简介\n通过浮动可以使一个元素向其父元素的左侧或右侧移动，使用float属性设置元素的浮动\n五三理解：相当于ps中新建一个图层\n\n\n可选值：\nnone：默认值，元素不动\nleft：元素向左浮动\nright：元素向右浮动\n\n\n注意：\n设置浮动以后，水平布局的等式不需要强制成立（例如：设置float:left，右外边距为0）\n元素会完全从文档流中脱离，不占用文档流的位置，所以元素下边的还在文档流中的元素会自动向上移动\n\n\n特点：\n浮动元素会完全脱离文档流，不再占据文档流中的位置\n设置浮动后元素会向父元素的左侧或右侧移动\n浮动元素默认不会从父元素中移除\n浮动元素不会超过它前面的其它浮动元素\n如果浮动元素的上面时一个没有浮动的块元素，则浮动元素无法上移\n\n\n作用：让页面中的元素可以水平排列，制作水平布局\n\n浮动的特点\n浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围，可利用浮动来设置文字环绕图片的效果\n\n浮动后，从文档流中脱离，元素的特点也会发生变化\n\n\n脱离文档流后的特点块元素\n不再独占页面的一行\n宽度和高度被内容撑开（默认情况）\n\n行内元素\n变成块元素，特点和块元素一样\n\n\n脱离文档流以后，不需要再区分块元素和行内元素\n\n","categories":["前端"],"tags":["CSS","float"]},{"title":"CSS提升（三）：定位相关知识","url":"/2022/03/02/CSS%E6%8F%90%E5%8D%87%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%AE%9A%E4%BD%8D%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","content":"\n定位：一种更加高级的布局手段\n通过定位可以将元素摆放到页面的任意位置\nposition属性\n\n\n可选值：\nstatic 默认值，元素是静止的没有开启定位\nralative 相对定位\nabsolute 绝对定位\nfixed 固定定位\nsticky 粘滞定位\n\n\n\n\n注：实际开发中，定位并不会大面积使用，整体上不用定位，定位通常用在细节上的微调\n\n相对定位\nposition：relative\n\n特点\n相对定位 若不设置偏移量，元素不发生任何变化\n\n\n偏移量：开启定位后，偏移量可以用来设置元素位置（与margin不同：不会影响别的元素）\n​    top、bottom：垂直方向定位（使用其一）\n​    left、right：水平方向定位（使用其一）\n*注：以上值要生效必须开启定位，若没开启定位，设置偏移量无效。\n\n\n相对定位 元素是参照于元素在文档流中的位置进行定位\n相对定位 会提高元素的层级\n相对定位 不会使元素脱离文档流\n相对定位 不会改变元素的性质（块还是块，行内还是行内）\n\n\n形象理解：灵魂出窍，元素肉体（偏移前）还占据页面位置，元素灵魂（偏移后）挪动了\n\n绝对定位\nposition：absolute\n\n特点\n绝对定位 若不设置偏移量，元素的位置不发生任何变化\n\n绝对定位 元素是相对于其包含块进行定位\n\n\n\n包含块（containing block）：\n​    正常情况下：包含块是离当前元素最近的祖先块元素\n​    绝对定位下：包含块是离当前元素最近的开启了定位的祖先元素；若所有祖先均未开启定位，则包含块是根元素。\n\n\n绝对定位 会提高元素的层级\n绝对定位 会使元素脱离文档流（不占据页面位置）\n绝对定位 会改变元素的性质（行内变成块，块的宽高被内容撑开）\n\n绝对定位元素布局水平方向布局当开启绝对定位后，水平方向的布局等式需要添加left和right\n\nleft + margin-left + border-left + padding-left + width + padding-right + border-right + margin-right + right&#x3D; 其包含块内容区的宽度\n\n\n如果9个值中没有auto则自动调整right值使等式两端满足\n\n如果有auto则自动调整auto的值\n可以调整auto的值：margin width left right\n\nleft、right默认值为auto，默认自动调整这两个值\n所以绝对定位下，需要设置居中时：\nmargin-left:auto;margin-right:auto;left：0；right：0；\n\n垂直方向布局当开启绝对定位后，垂直方向的布局等式也需要满足\n\ntop + margin-top+ border-top+ padding-top+ width + padding-bottom+ border-bottom+ margin-bottom+ bottom&#x3D; 其包含块内容区的高度\n\n【面试】实现绝对定位元素在包含块中水平、垂直都居中：\nmargin：auto;left：0；right：0；top:0;bottom:0;/*注意包含块要开启定位*/\n\n\n子元素在父元素中的定位：父元素相对，子元素绝对\n\n父元素相对：是为了在不脱离文档流的情况下开启定位（保证父元素周围的元素布局不混乱）\n子元素绝对：和其它子元素一起脱离文档流，避免互相影响\n\n固定定位\nposition：fixed\n\n特点\n固定定位 是特殊的绝对定位，大部分特点和绝对定位相同\n唯一与绝对定位不同的地方：\n固定定位 元素是参考于浏览器的视口进行定位（不会随网页的滚动条移动，eg广告）\n\n\n\n粘滞定位\nposition：sticky \n\n特点\n粘滞定位 兼容性不太好（一般不采用，通常使用js来实现）\n粘滞定位 和相对定位特点基本一致\n与相对定位不同的地方：\n固定定位 可以在元素到达某个位置时将其固定（eg，导航栏）\n\n\n\n元素的层级\n对于开启了定位的元素，可以通过z-index属性来指定元素的层级\n\n\n语法：z-index：整数\n值越大元素的层级越高，越优先显示\n\n若元素层级一样，则优先显示html中结构靠下的元素\n\n祖先元素的层级再高也不会盖住后代元素\n\n\n","categories":["前端"],"tags":["CSS","定位","元素层级"]},{"title":"CSS提升（二）：高度塌陷问题","url":"/2022/03/02/CSS%E6%8F%90%E5%8D%87%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7%E9%97%AE%E9%A2%98/","content":"\n现象：在浮动布局中，父元素的高度默认被子元素撑开，当子元素浮动后，其从文档流中脱离，将无法撑起父元素的高度，导致父元素的高度丢失，父元素下的元素会自动上移，导致页面布局混乱。\n\n\n解决方法将父元素高度写死\n缺点：容易导致内容溢出，或内容空洞\n\nBFC ( Block Formatting Context ) 块级格式化环境\nBFC是CSS中一个隐含的属性\n为元素开启BFC：元素变成独立的布局区域\n\n\n开启BFC的元素特点：\n\n当前元素不会被浮动元素所覆盖\n父元素开启BFC外边距不会和子元素重叠\n父元素开启BFC可以包含浮动的子元素（解决高度塌陷问题）\n\n\n开启BFC方式：（均为间接开启，都有些副作用）\n\n设置浮动\nfloat:left （宽度丢失）\n\n将元素设置为行内块元素\ndisplay:inline-block (宽度丢失)\n\n将overflow设置为非visible的值 (最常用)\n\noverflow：scroll\noverflow: auto\noverflow: hidden（最常用）\n\n\n\n\n\nclear (完美方式)\n不希望某个元素因为其它元素浮动的影响而改变位置，可以通过clear属性来清楚浮动元素对当前元素所产生的影响\n\n\n作用：清除浮动元素对当前元素所产生的影响\n\n可选值：\n\nleft：清除左侧浮动元素对当前元素的影响\nright：清除右侧浮动元素对当前元素的影响\nboth：清楚两侧中最大影响的那一侧\n\n\n原理：设置clear以后，浏览器会自动为元素添加一个上外边距，使其位置不受其他元素影响\n\n示例：\n&lt;div class=&quot;box1&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;box2&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;box3&quot;&gt;3&lt;/div&gt;\n\n.box1&#123;    width:200px;    height:200px;    background-color:#bfa;    /*左浮动*/    float:left;&#125;.box2&#123;    width:200px;    height:200px;    background-color: yellow;    /*右浮动*/    float:right;&#125;.box3&#123;    width:200px;    height:200px;    background-color: orange;    /*消除浮动影响*/    clear：both;&#125;\n\n效果：\n\n\n\n使用after伪类解决高度塌陷问题（clear解决）\n参考教程：【尚硅谷】Web前端零基础入门HTML5+CSS3基础教程丨初学者从入门到精通_哔哩哔哩_bilibili\n\n示例：\n\n\n&lt;div class=&quot;box1&quot;&gt;    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;/div&gt;\n\n.box1&#123;    border 10px red solid;&#125;.box2&#123;    width:100px;    height:200px;    background-color: #bfa;    float:left;&#125;.box1::after&#123;    content:&#x27;&#x27;;    /*将伪元素（行内元素）转换为块元素*/    diaplay:block;   /*或者用display:table*/    /*消除浮动影响*/    clear：both;&#125;\n\n\n效果：\n消除前：\n\n\n\n\n\n消除后：\n\n\n.clearfix(同时解决高度塌陷和外边距重叠问题).clearfix::before,.clearfix::after&#123;    /*前两行解决外边距重叠*/    content:&#x27;&#x27;;    /*将伪元素（行内元素）转换为块元素*/    display:table;    /*消除浮动影响*/    clear：both;    /*后两行解决高度塌陷*/&#125;\n\n","categories":["前端"],"tags":["CSS","高度塌陷","BFC","clear"]}]